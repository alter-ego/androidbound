def siteUrl = 'https://github.com/alter-ego/androidbound'
def gitUrl = 'https://github.com/alter-ego/androidbound.git'
def artifactGroup = "solutions.alterego"
def artifactName = "androidbound"
def artifactVersion = "0.6.0"
def artifactDesc = "This library offers easy view bindings for Android."
def artifactVersionCode = 20

buildscript {
    ext.kotlin_version = '1.0.1'

    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
        classpath 'me.tatarka:gradle-retrolambda:3.2.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

repositories {
    jcenter()
    mavenCentral()
    maven() { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 23
        versionCode artifactVersionCode
        versionName artifactName
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    android {
        lintOptions {
            abortOnError false
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/java'
        test.java.srcDirs += 'src/test/kotlin'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile 'solutions.alterego:advancedandroidlogger:1.0.8@aar'

    compile 'com.android.support:appcompat-v7:23.2.1'
    compile 'com.android.support:support-v4:23.2.1'

    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'io.reactivex:rxjava:1.1.3'

    provided 'javax.annotation:jsr250-api:1.0'
    compile 'org.projectlombok:lombok:1.16.2'

    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'

    // Testing
    testCompile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:1.9.5"
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

uploadArchives {
    repositories.mavenDeployer {
        def deployPath = file(getProperty('aar.deployPath'))
        repository(url: "file://${deployPath.absolutePath}")
        pom.project {
            groupId artifactGroup
            artifactId artifactName
            version artifactVersion
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    dryRun = false

    publications = ['Publication']
    pkg {
        repo = "android"
        name = artifactName
        userOrg = 'alterego-solutions'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
        issueTrackerUrl = 'https://github.com/alter-ego/androidbound/issues'

        version {
            name = artifactVersion
            desc = artifactDesc
            released = new Date()
            vcsTag = artifactVersion
        }
    }
}

publishing {
    publications {
        Publication(MavenPublication) {
            artifact("$buildDir/outputs/aar/AndroidBound-release.aar")
            artifact sourcesJar
            artifact javadocJar
            groupId artifactGroup
            artifactId artifactName
            version artifactVersion
        }
    }
}

